@model EditGroupModel

@{
    ViewData["Title"] = "Group Admin";

    SVUser user = UserManager.GetUser(Context)!;
}

<div class="container vw-100">
    <div class="col-12">

        @await Html.PartialAsync("_StatusMessage", TempData["StatusMessage"])

        <h3 style="text-align:center">@ViewData["Title"]</h3>
        <h2 style="text-align:center">@Model.Name</h2>

        <div class="row">
            <div class="col-4"></div>
            <div class="col-4">
                @await Component.InvokeAsync("GroupImage", Model.Group)
            </div>
            <div class="col-4"></div>
        </div>

        <br />
        <hr />
        <br />

        <form method="post">

            @Html.HiddenFor(x => x.Id)

            <div class="row">
                <div class="col-md-6">

                    <h4>Group Info</h4>

                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Name"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="GroupType"></label>
                        <br />
                        <select class="form-control form-select" disabled>
                            <option value="@Model.GroupType.ToString()" disabled>@Model.GroupType.ToString()</option>
                        </select>
                        @Html.HiddenFor(x => x.GroupType)
                    </div>
                    <div class="form-group">
                        <label asp-for="DistrictId"></label>
                        <br />
                        <select class="form-control" asp-for="DistrictId" asp-items="DBCache.GetAll<District>().Select(x => new SelectListItem() { Text = x.Name, Value = x.Id.ToString()})"></select>
                    </div>
                    @if (Model.Group.HasPermission(user, GroupPermissions.Edit))
                    {
                        <div class="form-group">
                            <label asp-for="Description"></label>
                            <textarea asp-for="Description" rows="6" class="form-control"> </textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label asp-for="Description"></label>
                            <textarea asp-for="Description" rows="6" class="form-control" disabled> </textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        @Html.HiddenFor(x => x.Description)
                    }

                    @if (Model.Group.HasPermission(user, GroupPermissions.Edit))
                    {
                        <div class="form-group">
                            <label asp-for="ImageUrl"></label>
                            <input asp-for="ImageUrl" class="form-control" />
                            <span asp-validation-for="ImageUrl" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input type="checkbox" asp-for="Open" class="form-check-inline" />
                            <label asp-for="Open"></label>
                            <span asp-Description-for="Open" class="form-control" />
                            <span asp-validation-for="Open" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label asp-for="ImageUrl"></label>
                            <input asp-for="ImageUrl" class="form-control" disabled />
                            <span asp-validation-for="ImageUrl" class="text-danger"></span>
                        </div>

                        @Html.HiddenFor(x => x.ImageUrl)
                    }
                </div>

                <div class="col-md-6">
                    <h4>Manage Members</h4>

                    <br />
                    <div class="container">
                        <div class="row">
                            @foreach (BaseEntity member in Model.Group.Members)
                            {
                                <div class="col-6 srow">
                                    <div class="p-1">
                                        <img class="smallpfp" style="margin-left: 10px; margin-right:10px; float:right" src="@member.ImageUrl" />
                                    </div>
                                    @if (member.EntityType == EntityType.User)
                                    {
                                        <a asp-controller="User" asp-action="Info" asp-route-id="@member.Id">
                                            <p class="forumtable-text">@member.Name</p>
                                        </a>
                                    }
                                    else {
                                        <a asp-controller="Group" asp-action="Info" asp-route-id="@member.Id">
                                            <p class="forumtable-text">@member.Name</p>
                                        </a>                                        
                                    }
                                </div>
                                <div class="col-6 srow">
                                    <a asp-action="ViewMemberRoles" asp-controller="Group" asp-route-groupid="@Model.Id" asp-route-targetid="@member.Id" class="btn btn-outline-primary">Roles</a>
                                    @if (Model.Group.HasPermission(user, GroupPermissions.ManageMembership))
                                    {
                                        <a asp-action="ManageUser" asp-controller="Group" asp-route-groupid="@Model.Id" asp-route-userid="@member.Id" asp-route-operation="kick" class="btn btn-outline-warning">Kick</a>
                                        <a asp-action="ManageUser" asp-controller="Group" asp-route-groupid="@Model.Id" asp-route-userid="@member.Id" asp-route-operation="ban" class="btn btn-outline-danger">Ban</a>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="container" style="align-content:flex-start">
                    <div class="d-flex">
                        <div class="flex-column" style="margin-right:5px; margin-left: -15px">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>

        <br />
        <hr />
        <br />
    </div>

    <div class="row">
        <div class="col-12 align-content-center text-center">
            <h4 style="text-align:center">Role Management</h4>
            <a asp-action="CreateRole" asp-controller="Group" asp-route-groupid="@Model.Id" class="btn btn-outline-primary m-2">Create Role</a>
            <br />
        </div>
    </div>

    <br />
    <br />

    <div class="row srow">
        @foreach (GroupRole role in DBCache.GetAll<GroupRole>().Where(x => x.GroupId == Model.Id).OrderByDescending(x => x.Authority))
        {
            <div class="col-2">
                <a style="color: #@role.Color">@role.Name</a>
            </div>
            <div class="col-2">
                <p>Members: @role.MembersIds.Count()</p>
            </div>
            <div class="col-2">
                <p>Salary: ¢@role.Salary</p>
            </div>
            <div class="col-3">
                <p>Perms: @role.GetPermissions()</p>
            </div>
            <div class="col-3">
                @if (Model.Group.HasPermission(user, GroupPermissions.CreateRole))
                {
                    <a asp-action="CreateRole" asp-controller="Group" asp-route-groupid="@Model.Id" asp-route-roleid="@role.Id" class="btn btn-outline-warning">Edit</a>
                    <a asp-action="DeleteRole" asp-controller="Group" asp-route-groupid="@Model.Id" asp-route-roleid="@role.Id" class="btn btn-outline-danger">Delete</a>
                }
                <a asp-action="RoleMembership" asp-controller="Group" asp-route-groupid="@Model.Id" asp-route-roleid="@role.Id" class="btn btn-outline-primary">Membership</a>
            </div>
        }
    </div>

    <br />
    <br />

    <div class="row">
        <div class="col-12 align-content-center text-center">
            <h4 style="text-align:center">Credit Management</h4>
            <h5 style="text-align:center">Credits: ¢@Math.Round(await Model.Group.GetCreditsAsync(), 2)</h5>
            <br />

            <p>This does not work right now</p>
            <a asp-action="Pay" asp-controller="Group" asp-route-groupid="@Model.Id" class="btn btn-outline-primary m-2">Send Payment</a>

        </div>
    </div>

    <br />
    <br />

    @if (true)
    {
        @await Html.PartialAsync("/Views/Shared/Components/ResourceOwnershipTable.cshtml", Model.Group)
    }

    <br />
    @if (Model.Group.IsOwner(user))
    {
        <div class="row">
            <div class="col-12 align-content-center text-center mb-2">
                <p>This do not work right now</p>
                <a asp-action="Delete" asp-controller="Group" asp-route-groupid="@Model.Id" class="btn btn-danger">Delete Group Permanently</a>
            </div>
            
            <div class="col-12 align-content-center text-center">
                <a asp-action="TransferGroup" asp-controller="Group" asp-route-groupid="@Model.Id" class="btn btn-danger">Transfer Group</a>
            </div>
        </div>
    }

    <br />
    <br />

    @section Scripts {
        @await Html.PartialAsync("_ValidationScriptsPartial")
    }
</div>