@model SV2.Models.Building.CreateBuildingRequestModel

@{
    ViewData["Title"] = "Build";

    SVUser user = UserManager.GetUser(Context)!;
}

<div class="container vw-100">
    <div class="col-12">

        @await Html.PartialAsync("_StatusMessage", TempData["StatusMessage"])

        <h3 style="text-align:center">@ViewData["Title"]</h3>
        <h2 style="text-align:center"></h2>

        <div class="row">
            <div class="col-4"></div>
            <div class="col-4">
            </div>
            <div class="col-4"></div>
        </div>

        <br />
        <hr />
        <br />
        <form method="post">
            <div class="col-12 align-content-center text-center" style="margin-left: auto;margin-right: auto;max-width: 500px;">
                @Html.HiddenFor(x => x.ProvinceId)
                @Html.HiddenFor(x => x.BuildingId)
                <div class="row">
                    <h4>Form for submitting a building request for @Model.LuaBuildingObj.PrintableName</h4>

                    <div asp-validation-summary="All" class="text-danger"></div>
                </div>

                <label>Build As (what entity should this request be made from)</label>
                <select asp-for="BuildAsId" asp-items="Model.CanBuildAs" class="form-select form-control"></select>

                <div class="form-group">
                    <label>Number of Levels to build</label>
                    <input asp-for="levelsToBuild" class="form-control" type="number" min="0" max="1000"/>
                    <span asp-validation-for="levelsToBuild" class="text-danger"></span>
                </div>
                <br />

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Submit Request</button>
                </div>
            </div>
        </form>
    </div>

    @section Scripts {
        @await Html.PartialAsync("_ValidationScriptsPartial")
    }
</div>