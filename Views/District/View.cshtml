@using SV2.Database;
@using SV2.Database.Models.Districts;
@model SV2.Database.Models.Districts.District

@{ 
    if (Model != null)
    {
        ViewData["Title"] = Model.Name;
    }
}

<head>
    <meta property="og:title" content="@Model.Name">
    <meta name="keywords" content="SpookVooper, Vooperia, Districts, Government">
    <meta property="og:description" content="@Model.Description">
    <meta property="og:url" content="https://spookvooper.com/District/View/@Model.Name">
    <style>
        .tooltip-dontshow {
            opacity: 0 !important;
        }
        .tooltip {
            cursor:pointer;
        }
    </style>
</head>

<!-- Main row for page -->
<div class="d-flex flex-row align-content-center" style="width:100%">
    <!-- Leftmost column -->
    <div class="p-2 flex-shrink-1 ms-auto"></div>

    <!-- Center column -->
    <div class="p-4" style="width:80em">

        @await Html.PartialAsync("_StatusMessage", TempData["StatusMessage"])

        @{
            if (Model is not null)
            {
                SVUser? user = UserManager.GetUser(Context);

                if (user != null && Model.Senator != null && (Model.Senator.UserId == user.Id || user.ValourId == 12200448886571008))
                {
                    <a asp-route-id="@Model.Name" asp-action="Edit" asp-controller="District" class="btn btn-primary">Modify</a>
                }

                <div class="d-flex align-content-center align-items-center">

                    <div class="ms-auto" style="display: inline-block; vertical-align:central; height:100%">
                        <img src="@Model.FlagUrl" style="width:5em; vertical-align:middle" />
                    </div>

                    <div style="display:inline-block; margin:2em;">
                        <h2 style="text-align:center" class="display-4">The District of</h2>
                        <h1 style="text-align:center" class="display-3">@Model.Name</h1>
                    </div>

                    <div class="me-auto" style="display: inline-block; vertical-align:central; height:100%">
                        <img src="@Model.FlagUrl" style="width:5em; vertical-align:middle" />
                    </div>

                </div>

                <br />

                if (Model.Senator is not null)
                {
                    <div class="p-2 align-self-center" style="text-align:center">

                        @{
                            string senateName = "None.";
                            senateName = Model.Senator.User.Name;
                        }

                        <h2>Elected Senator: @senateName</h2>
                        <div class="container">
                            <div class="row">
                                <div class="col-sm-4"></div>
                                <div class="col-sm-4 col-sm-offset-4">
                                    <div>
                                        @if (Model.Senator is not null)
                                        {
                                            // TODO: add getting party using a party system that we will create
                                            //var party = senator.GetParty();
                                            string color = "ffffff";

                                            //if (party != null)
                                            //{
                                            //    color = party.Color;
                                            //}

                                            <br />
                                            <img class="govpfp" style="box-shadow: 0px 0px 0px 7px #{@color};" src="@Model.Senator.User.ImageUrl" />
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-4"></div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="p-2 align-self-center" style="text-align:center">
                        <h3>Elected Senator: None!</h3>
                    </div>
                }

                int population = DBCache.GetAll<SVUser>().Count(x => x.DistrictId == Model.Id);

                <div class="p-2 align-self-center" style="text-align:center">
                    <h3>User Population: @population</h3>
                </div>

                @foreach (var staticmodififer in Model.StaticModifiers) {
                    <div class="p-2 align-self-center" style="text-align:center">
                        @{
                            var spanclass = "modifier-icon-good";
                            if (!staticmodififer.BaseStaticModifiersObj.IsGood)
                                spanclass = "modifier-icon-bad";
                        }
                        <span class="@spanclass" data-bs-toggle="tooltip" data-bs-html="true" data-bs-custom-class="modifier-tooltip-div" data-bs-sanitize="false" data-bs-title="@Html.Raw(staticmodififer.GenerateHtmlForTooltip(Model))">@staticmodififer.BaseStaticModifiersObj.Icon</span>
                    </div>
                }

                if (user != null)
                {
                    if (user.DistrictId != null && user.DistrictId == Model.Id)
                    {
                        <div class="p-2 align-self-center" style="text-align:center">
                            <h3>You live here.</h3>
                        </div>
                    }
                    else
                    {
                        <div class="p-2 align-self-center" style="text-align:center">
                            <a asp-controller="District" asp-action="MoveDistrict" asp-route-id="@Model.Id" class="btn btn-outline-primary">Move Here</a>
                        </div>
                    }
                }
                else
                {
                    <div class="p-2 align-self-center" style="text-align:center">
                        <h3>Log in to move!</h3>
                    </div>
                }

                if (user!.Id == Model.GovernorId) {
                    <div class="p-2 align-self-center" style="text-align:center">
                            <a asp-controller="District" asp-action="EditPolicies" asp-route-id="@Model.Id" class="btn btn-outline-primary">Edit Policies</a>
                    </div>
                }
 
                if (Model.Description != null)
                {
                    <h1 style="text-align:left">Description</h1>
                    <p class="p" style="font-size:large">@Html.Raw(MarkdownManager.GetHtml(Model.Description))</p>
                }

                <center>
                    @if (!Context.Request.QueryString.Value.Contains("devmapmode=true")) {
                        <a href="/District/View/@Model.Name">
                            <button class="btn btn-primary">Normal Mode</button>
                        </a>
                        <a href="/District/View/@Model.Name?devmapmode=true">
                            <button class="btn btn-outline-primary">View Development</button>
                        </a>
                    }
                    else {
                        <a href="/District/View/@Model.Name">
                        <button class="btn btn-outline-primary">Normal Mode</button>
                        </a>
                        <a href="/District/View/@Model.Name?devmapmode=true">
                            <button class="btn btn-primary">View Development</button>
                        </a>
                    }
                    <div class="window" id="window" style="margin-top: 15px;">
                        @{
                            SV2.Models.Map.DistrictMap mapdata = MapController.DistrictMaps.First(x => x.DistrictId == Model.Id);
                        }
                        <svg id="svg" viewBox="@(mapdata.LowestXPos-10) @(mapdata.LowestYPos) @((mapdata.HighestXPos-mapdata.LowestXPos)+30) @((mapdata.HighestYPos-mapdata.LowestYPos)+25)"
                             style="/* transform: scale(0.75);transform-origin: 50% 0%; */width: 75%;height: 75%;">
                            <style>
                                path {
                                    fill: white;
                                    stroke: black;
                                    stroke-width: 0.5px;
                                }

                                path:hover {
                                    filter: brightness(0.75);
                                }
                                a {
                                    text-decoration: none;
                                }
                                .city-name-2 {
                                    text-decoration: none;
                                    font-size: 5px;
                                    color: purple;
                                    fill: currentColor;
                                }
                                .city-name {
                                    border-radius: 0.9px;
                                    font-size: 4.75px;
                                    padding: 0px;
                                }
                            </style>
                            @foreach (var province in mapdata.Provinces)
                            {
                                var dbprovince = DBCache.Get<Province>(province.Id);
                                bool ShowCityCircle = false;
                                if ((dbprovince.CurrentDevelopmentStage.Name == "City" || dbprovince.CurrentDevelopmentStage.Name == "Megacity") && dbprovince.Name != "")
                                {
                                    ShowCityCircle = true;
                                }
                                <a href="/Province/View/@province.Id" data-bs-toggle="tooltip" data-placement="top" title="@dbprovince.Name" data-sv-show="@ShowCityCircle">
                                    @if (!Context.Request.QueryString.Value.Contains("devmapmode=true"))
                                    {
                                        <path d="@province.D" id="@province.Id" style="fill:#@province.District.Color;" class="province"></path>
                                        if (ShowCityCircle)
                                        {
                                            <circle cx="@(province.XPos+4)" cy="@(province.YPos+8)" r="3" style="fill: white;" />
                                        }
                                    }
                                    else
                                    {
                                        <path d="@province.D" id="@province.Id" style="fill:@dbprovince.GetDevelopmentColorForMap()" class="province"></path>
                                        if (ShowCityCircle)
                                        {
                                            <circle cx="@(province.XPos)" cy="@(province.YPos+8)" r="3" style="fill: white;" />
                                        }
                                    }
                                </a>
                            }

                            @if (false)
                            {
                                //foreach (var province in mapdata.Provinces)
                              //  {
                               //     var dbprovince = DBCache.Get<Province>(province.Id);
                               //     if (dbprovince.CurrentDevelopmentStage.Name == "City")
                              //      {
                            //            <foreignObject x="@(province.XPos-17)" y="@(province.YPos-3)" width="38" height="7.2">
                               //             <div class="tooltip-inner city-name">New Voopris City</div>
                                //        </foreignObject>
                               //     }
                               // }
                            }
                        </svg>
                    </div>
                </center>
            } 
            else
            {
                <h1 style="text-align:center" class="display-4">District not found!</h1>
            }
        }
    </div>

    <!-- Rightmost column -->
    <div class="p-4 flex-shrink-1 me-auto"></div>
</div>

<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = []
    for (i = 0; i < tooltipTriggerList.length;i++) {
        el = tooltipTriggerList[i]
        if (el.getAttribute("data-sv-show") == "True") {
            el.setAttribute("data-bs-trigger", "manual")
            el.setAttribute("data-bs-offset", "0, -22")
            e = new bootstrap.Tooltip(el)
            tooltipList.push(e)
            e.show()
            if (false) 
            {
                e.tip.addEventListener("mouseleave", function (event) {
                    event.currentTarget.classList.remove("tooltip-dontshow");
                }, false);

                e.tip.addEventListener("mouseover", function (event) {
                    event.currentTarget.classList.add("tooltip-dontshow");
                }, false);
            }
            if (true) {
                e.tip.addEventListener("mouseup", function (event) {
                    event.currentTarget.style += "display:none;";
                }, false);
            }
        }
        else {
            e = new bootstrap.Tooltip(el)
            tooltipList.push(e)
        }
    }
</script>