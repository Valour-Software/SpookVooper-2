@using Microsoft.EntityFrameworkCore;
@model SVUser
@inject VooperDB dbctx;

@if (Model != null)
{
    <head>
        <meta property="og:title" content="@Model.Name">
        <meta name="keywords" content="SpookVooper, User, @Model.Name">
        <meta property="og:description" content="@Model.Description">
        <meta property="og:url" content="https://spookvooper.com/User/Info?svid=@Model.Id">
        <meta property="og:image" content="@Model.GetPfpUrl()">
        <meta name="twitter:image" content="@Model.GetPfpUrl()">
    </head>
}
else
{
    <head>
        <meta property="og:title" content="Null user">
        <meta name="keywords" content="SpookVooper, User">
        <meta property="og:description" content="User could not be found!">
        <meta property="og:url" content="https://spookvooper.com/">
        <meta property="og:image" content="">
        <meta name="twitter:image" content="">
    </head>
}

<div class="container vw-100">
    <div class="col-12">
        @{

            string title = "Citizen";

            if (Model != null)
            {

                ViewData["Title"] = Model.Name;

                if (Model.IsEmperor())
                {
                    title = "Emperor";
                }
                else if (Model.IsCFV())
                {
                    title = "CFV";
                }
                else if (Model.IsChancellor())
                {
                    title = "Prime Minister";
                }
                else if (Model.IsJustice())
                {
                    title = "Justice";
                }
                else if (Model.IsSenator())
                {
                    title = "Senator";
                }

                SVUser user = UserManager.GetUser(Context)!;

                <h2 style="text-align:center" class="display-4">@title</h2>
                <h1 style="text-align:center" class="display-4">@Model.Name</h1>

                <div class="container">
                    <div class="row">
                        <div class="col-sm-4"></div>
                        <div class="col-sm-4 col-sm-offset-4">
                            <div>
                                @{
                                    <br />
                                    <img class="govpfp" style="box-shadow: 0px 0px 0px 7px #@Model.GetPfpRingColor();" src="@Model.GetPfpUrl()" />
                                }
                            </div>
                        </div>
                        <div class="col-sm-4"></div>
                    </div>
                </div>

                if (Model.DistrictId is not null)
                {
                    <p class="m-2" style="text-align:center; font-size:x-large">District: @Model.District.Name</p>
                }
                else
                {
                    <p class="m-2" style="text-align:center; font-size:x-large">District: Offworld</p>
                }

                if (Model.Description != null)
                {
                    <h1 class="m-2" style="text-align:left">Bio</h1>
                    <p class="p m-2" style="font-size:large">@Html.Raw(MarkdownManager.GetHtml(Model.Description))</p>
                }

                if (user != null && Model.Id == user.Id)
                {
                    <br />
                    <center><a asp-action="SetInfo" asp-controller="User" class="btn btn-primary">Modify</a></center>
                }

                <br />
                <hr />

                <h1>Recent Posts</h1>

                var posts = await dbctx.ForumPosts.Where(p => !p.Removed && p.AuthorId == Model.Id).OrderBy(c => c.TimePosted).Take(5).ToListAsync();

                for (int i = 0; i < 5; i++)
                {
                    if (i > posts.Count() - 1)
                    {
                        break;
                    }

                    ForumPost post = posts[i];

                    <div class="d-flex flex-wrap srow">
                        <div class="p-2" style="font-size:larger">
                            💙 @post.Likes.Count
                        </div>
                        <div class="p-2" style="width:40%">

                            <a style="font-size:larger" asp-controller="Forum" asp-action="ViewPost" asp-route-id="@post.Id">
                                @StringHelper.FormatTitle(post.Title, 20)
                            </a>
                        </div>

                        <div class="p-0 flex-grow-1">
                            <div class="d-flex">
                                @{
                                    SVUser authorUser = DBCache.Get<SVUser>(post.AuthorId)!;
                                    <div class="p-1">
                                        <img class="smallpfp" style="margin-left: 10px; margin-right:10px; float:right" src="@authorUser.GetPfpUrl()" />
                                    </div>
                                    <a asp-controller="User" asp-action="Info" asp-route-id="@authorUser.Id">
                                        <p class="forumtable-text">@authorUser.Name</p>
                                    </a>
                                }
                            </div>
                        </div>

                        <div class="p-2" style="min-width:25%">
                            <p style="word-break:break-all">
                                @StringHelper.FormatTitle(post.Content, 30)
                            </p>
                        </div>
                        <!--
                            <div class="col-3">
                                <p style="font-size:smaller">
                        @post.Tags
                                </p>
                            </div>
                        -->

                    </div>





                }
            }
            else
            {
                <h1 style="text-align:center" class="display-4">User not found!</h1>
            }
        }
    </div>
</div>